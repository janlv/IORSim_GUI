name: Build Workflow

on:
  release:
    types: [ published ]

env:
  APP_NAME: IORSim_GUI
  UPX_VER: '4.0.2'
  GH_TOKEN: ${{secrets.GITHUB_TOKEN}}  # Make gh release upload work 

defaults:
  run:
    shell: bash

jobs:
  build:
    strategy:
      fail-fast: false                # Do not stop if one build fails
      matrix:
        os: [ windows-2022, ubuntu-20.04 ]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    - name: Prepare Python
      run: python -m pip install -r requirements.txt pyinstaller
    - name: Build bundle (download UPX, unzip, build)
      run: |
        UPX_URL=https://github.com/upx/upx/releases/download/v$UPX_VER
        if [ "$RUNNER_OS" == "Windows" ]; then
          EXE=.exe
          UPX_FILE=upx-$UPX_VER-win64
          EXT=zip
          SEP=";"
          curl -LJO $UPX_URL/$UPX_FILE.$EXT    # Download UPX
          7z x $UPX_FILE.$EXT                  # Extract UPX
        elif [ "$RUNNER_OS" == "Linux" ]; then
          UPX_FILE=upx-$UPX_VER-amd64_linux
          EXT=tar.xz
          SEP=":"
          wget $UPX_URL/$UPX_FILE.$EXT        # Download UPX
          tar -xvf $UPX_FILE.$EXT             # Extract UPX
        else 
          echo "$RUNNER_OS not supported"
          exit 1
        fi
        # Build executable
        pyinstaller$EXE --onefile --add-data "guides${SEP}guides" --add-data "icons${SEP}icons" --upx-dir "$UPX_FILE" IORSim_GUI.py
        TAG=${{matrix.os}}                            # Tag executable with os-type
        NEW_NAME=${APP_NAME}_${TAG%-*}                # Remove everything after -
        mv -v dist/$APP_NAME$EXE dist/$NEW_NAME$EXE   # Rename pyinstaller generated file
        ls -l dist/$NEW_NAME$EXE
        echo "ASSET=dist/$NEW_NAME$EXE#'${{matrix.os}} executable'" >> $GITHUB_ENV
    # - name: Tar files
    #   run: tar -cvf my_files.tar dist
    # - name: Upload Artifact
    #   uses: actions/upload-artifact@v3
    #   with:
    #     name: my-artifact
    #     path: my_files.tar
    - name: Upload Asset
      run: gh release upload ${{github.event.release.tag_name}} ${{env.ASSET}}
