name: Build Workflow

on:
  release:
    types: [ published ]

env:
  APP_NAME: IORSim_GUI
  UPX_VER: '4.0.2'
  GH_TOKEN: ${{secrets.GITHUB_TOKEN}}  # Make gh release upload work 

defaults:
  run:
    shell: bash

jobs:
  build:
    strategy:
      fail-fast: false                # Do not stop if one build fails
      matrix:
        os: [ windows-2022, ubuntu-20.04, ubuntu-22.04 ]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    - name: Prepare Python
      run: python -m pip install -r requirements.txt pyinstaller
    - name: Build bundle (download UPX, unzip, build)
      run: |
        UPX_URL=https://github.com/upx/upx/releases/download/v$UPX_VER
        if [ "$RUNNER_OS" == "Windows" ]; then
          EXE=.exe
          UPX_FILE=upx-$UPX_VER-win64
          EXT=zip
          SEP=";"
          curl -LJO $UPX_URL/$UPX_FILE.$EXT 
          7z x $UPX_FILE.$EXT               
        elif [ "$RUNNER_OS" == "Linux" ]; then
          UPX_FILE=upx-$UPX_VER-amd64_linux
          EXT=tar.xz
          SEP=":"
          wget $UPX_URL/$UPX_FILE.$EXT        
          tar -xvf $UPX_FILE.$EXT
        else 
          echo "$RUNNER_OS not supported"
          exit 1
        fi
        pyinstaller$EXE --onefile --add-data "guides${SEP}guides" --add-data "icons${SEP}icons" --upx-dir "$UPX_FILE" IORSim_GUI.py
        echo "ASSET=dist/$APP_NAME-${{matrix.os}}$EXE#'${{matrix.os}} executable'" >> $GITHUB_ENV
    - name: Upload Asset
      run: gh release upload ${{github.event.release.tag_name}} ${{env.ASSET}}
